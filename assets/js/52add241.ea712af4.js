"use strict";(self.webpackChunksocial_graphics_library=self.webpackChunksocial_graphics_library||[]).push([[174],{6722:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return p},contentTitle:function(){return c},metadata:function(){return o},toc:function(){return m},default:function(){return u}});var n=a(7462),i=a(3366),l=(a(7294),a(3905)),r=["components"],p={id:"inject_template",title:"Inject Template (Experimental Feature)",sidebar_label:"Inject Template (Experimental Feature)"},c=void 0,o={unversionedId:"inject_template",id:"inject_template",isDocsHomePage:!1,title:"Inject Template (Experimental Feature)",description:"Inject Template (Experimental Feature)",source:"@site/docs/inject_template.md",sourceDirName:".",slug:"/inject_template",permalink:"/docs/inject_template",tags:[],version:"current",frontMatter:{id:"inject_template",title:"Inject Template (Experimental Feature)",sidebar_label:"Inject Template (Experimental Feature)"},sidebar:"defaultSidebar",previous:{title:"Get Data URL",permalink:"/docs/getDataUrl"},next:{title:"Calling multible generations",permalink:"/docs/multi_calls"}},m=[{value:"Inject Template (Experimental Feature)",id:"inject-template-experimental-feature",children:[],level:2}],s={toc:m};function u(e){var t=e.components,a=(0,i.Z)(e,r);return(0,l.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"inject-template-experimental-feature"},"Inject Template (Experimental Feature)"),(0,l.kt)("p",null,"As an alternative to forking the project, it is possible to inject your own templates locally. To do this, simply install the NPM package with ",(0,l.kt)("inlineCode",{parentName:"p"},"npm i social-graphics-library"),", then after the initialization a template can be injected with the following method:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'new SGL.inject([\n  {\n    "callName": "template_name",\n    "template": new Template()\n  }\n')))}u.isMDXComponent=!0}}]);